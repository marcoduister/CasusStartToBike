@model IEnumerable<CasusStartToBike.Models.CycleEvent>

@{
    ViewBag.Title = "Fiets Evenement Overzicht";
}
<h2>Fiets Evenement Overzicht</h2>

<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="pills-Public-tab" data-bs-toggle="pill" data-bs-target="#pills-Public" type="button" role="tab" aria-controls="pills-Public" aria-selected="true">Openbaar</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="pills-Own-tab" data-bs-toggle="pill" data-bs-target="#pills-Own" type="button" role="tab" aria-controls="pills-Own" aria-selected="false">Mijn Spellen</button>
    </li>
</ul>
<div class="tab-content" id="pills-tabContent">
    <div class="tab-pane fade show active" id="pills-Public" role="tabpanel" aria-labelledby="pills-Public-tab">

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.EventName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EventStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EventEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Location)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CycleRoute.RouteName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Difficulty)
                </th>
                <th>
                    Organisator
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Where(e => e.MakerId.ToString() != "1" @*Session["UserID"].ToString()*@))
            {

                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventEnd)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CycleRoute.RouteName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Difficulty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.User.Email)
                        </td>
                        <td>
                            @Html.ActionLink("Inzien", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })

                            @Html.ActionLink("Mee doen", "Join", new { id = item.Id }, new { @class = "btn btn-success btn-sm" })
                        </td>
                    </tr>
                
            }

        </table>

    </div>
    <div class="tab-pane fade" id="pills-Own" role="tabpanel" aria-labelledby="pills-Own-tab">


        @if (true@*Session["UserRole"].ToString() != Models.Enums.Rolen.Player.ToString()*@)
        {
            <p>
                @Html.ActionLink("Spel aanmaken", "Create", null, new { @class = "btn btn-success" })
            </p>
        }

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.EventName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EventStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EventEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Location)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CycleRoute.RouteName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Difficulty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsArchived)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsPublic)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                if (item.MakerId.ToString() ==  "1"/*Session["UserID"].ToString()*/ || item.Deelnemers.Any(e => e.Id.ToString() == "1" /*Session["UserID"].ToString()*/))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EventEnd)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CycleRoute.RouteName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Difficulty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsArchived)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsPublic)
                        </td>

                        <td>
                            @if (item.IsArchived == false)
                            {
                                if (true/*Session["UserRole"].ToString() != Models.Enums.Rolen.Player.ToString()*/ || !item.Deelnemers.Any(e => e.Id.ToString() == "1"/*Session["UserID"].ToString()*/))
                                {
                                    if (item.EventName == null)
                                    {
                                        @Html.ActionLink("Start", "Start", new { id = item.Id }, new { @class = "btn btn-warning btn-sm" });
                                    }
                                    @Html.ActionLink("Inzien", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" });

                                    if (item.MakerId.ToString() == "1"/*Session["UserID"].ToString()*/)
                                    {
                                        @Html.ActionLink("Bewerk", "Edit", new { id = item.Id }, new { @class = "btn btn-success btn-sm" });

                                        @Html.ActionLink("Verwijder", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm" });
                                    }
                                }
                                else
                                {
                                    @Html.ActionLink("Inzien", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" });
                                }
                            }
                        </td>
                    </tr>
                }
            }

        </table>
    </div>


</div>